package cz.cvut.fit.hrabajak.semestralka.client.gui;

import cz.cvut.fit.hrabajak.semestralka.client.consume.ConsumeProduct;
import cz.cvut.fit.hrabajak.semestralka.rest.dto.ProductDto;
import org.springframework.beans.factory.annotation.Autowired;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ProductEditor {

	public JFrame frame;
	public JPanel panel;
	public JTextField name;
	public JTextField entity_id;
	public JTextField price;
	public JButton bt_load;
	public JButton bt_update;
	public JButton bt_clean;
	public JButton bt_delete;

	@Autowired
	private ConsumeProduct cp;

	public void initialize() {

		this.frame = new JFrame();
		this.frame.setTitle("Product editor");
		this.frame.setSize(600, 200);
		this.frame.getContentPane().add(this.panel);
		this.frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		this.frame.setResizable(false);
		this.frame.setVisible(true);
		this.frame.toFront();

		this.bt_load.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent actionEvent) {

				if (entity_id.getText().trim().isEmpty()) {
					UpdateFields(null);

				} else {
					try {
						UpdateFields(cp.GetProductById(Long.parseLong(entity_id.getText())));

					} catch (Exception ex) {
						JOptionPane.showMessageDialog(null, "Cannot get product: " + ex.getMessage());
					}
				}

			}
		});

		this.bt_update.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent actionEvent) {
				try {

					ProductDto p = new ProductDto();

					if (!entity_id.getText().trim().isEmpty()) {
						p.setEntity_id(Long.parseLong(entity_id.getText()));
					}

					p.setName(name.getText());
					p.setPrice(Long.parseLong(price.getText()));

					UpdateFields(cp.UpdateOrCreateProduct(p));

				} catch (Exception ex) {
					JOptionPane.showMessageDialog(null, "Cannot create or update product: " + ex.getMessage());
				}
			}
		});

		this.bt_clean.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent actionEvent) {

				UpdateFields(null);

			}
		});

		this.bt_delete.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent actionEvent) {

				try {
					cp.DeleteProductById(Long.parseLong(entity_id.getText()));
					UpdateFields(null);

				} catch (Exception ex) {
					JOptionPane.showMessageDialog(null, "Cannot delete product: " + ex.getMessage());
				}

			}
		});

	}

	private void UpdateFields(ProductDto p) {
		if (p == null) {
			entity_id.setText("");
			name.setText("");
			price.setText("");

		} else {
			entity_id.setText(Long.toString(p.getEntity_id()));
			name.setText(p.getName());
			price.setText(Long.toString(p.getPrice()));
		}
	}

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		panel = new JPanel();
		panel.setLayout(new GridBagLayout());
		final JLabel label1 = new JLabel();
		label1.setText("Name:");
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.anchor = GridBagConstraints.WEST;
		panel.add(label1, gbc);
		name = new JTextField();
		name.setColumns(20);
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 1;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		panel.add(name, gbc);
		final JLabel label2 = new JLabel();
		label2.setText("Price:");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 2;
		gbc.anchor = GridBagConstraints.WEST;
		panel.add(label2, gbc);
		final JLabel label3 = new JLabel();
		label3.setText("Entity id: ");
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.anchor = GridBagConstraints.WEST;
		panel.add(label3, gbc);
		entity_id = new JTextField();
		entity_id.setColumns(10);
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		panel.add(entity_id, gbc);
		price = new JTextField();
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 2;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		panel.add(price, gbc);
		bt_load = new JButton();
		bt_load.setText("Load");
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		panel.add(bt_load, gbc);
		bt_update = new JButton();
		bt_update.setText("Create, update");
		gbc = new GridBagConstraints();
		gbc.gridx = 2;
		gbc.gridy = 2;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		panel.add(bt_update, gbc);
		bt_clean = new JButton();
		bt_clean.setText("Clean form");
		gbc = new GridBagConstraints();
		gbc.gridx = 3;
		gbc.gridy = 0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		panel.add(bt_clean, gbc);
		bt_delete = new JButton();
		bt_delete.setText("Delete");
		gbc = new GridBagConstraints();
		gbc.gridx = 3;
		gbc.gridy = 2;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		panel.add(bt_delete, gbc);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() { return panel; }

}
